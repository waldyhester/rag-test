{
  // Configuration for JavaScript files
  "extends": [
    "airbnb-base",
    "next/core-web-vitals", // Needed to avoid warning in next.js build: 'The Next.js plugin was not detected in your ESLint configuration'
    "plugin:prettier/recommended"
  ],
  "rules": {
    "prettier/prettier": [
      "off",
      {
        "singleQuote": true,
        "endOfLine": "auto"
      }
    ] // Avoid conflict rule between Prettier and Airbnb Eslint
  },
  "overrides": [
    // Configuration for TypeScript files
    {
      "files": ["**/*.ts", "**/*.tsx", "**/*.mts"],
      "plugins": [
        "@typescript-eslint",
        "unused-imports",
        "tailwindcss",
        "simple-import-sort"
      ],
      "extends": [
        "plugin:tailwindcss/recommended",
        "airbnb",
        "airbnb-typescript",
        "next/core-web-vitals",
        "plugin:prettier/recommended"
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "project": "./tsconfig.json"
      },
      "rules": {
        "prettier/prettier": [
          "off",
          {
            "singleQuote": true,
            "endOfLine": "auto"
          }
        ], // Avoid conflict rule between Prettier and Airbnb Eslint
        "react/button-has-type": "off",
        "@typescript-eslint/no-use-before-define": "off", // Disable Airbnb's specific rule
        "react/jsx-no-constructed-context-values": "off", // Disable Airbnb's specific rule
        "react-hooks/exhaustive-deps": "off", // Disable exhaustive-deps rule
        "import/no-extraneous-dependencies": "off",
        "no-return-assign": "off",
        "import/extensions": "off", // Avoid missing file extension errors, TypeScript already provides a similar feature
        "react/function-component-definition": "off", // Disable Airbnb's specific function type
        "react/destructuring-assignment": "off", // Vscode doesn't support automatically destructuring, it's a pain to add a new variable
        "react/require-default-props": "off", // Allow non-defined react props as undefined
        "react/jsx-props-no-spreading": "off", // _app.tsx uses spread operator and also, react-hook-form
        "@typescript-eslint/comma-dangle": "off", // Avoid conflict rule between Eslint and Prettier
        "@typescript-eslint/consistent-type-imports": "error", // Ensure `import type` is used when it's necessary
        "react/no-unstable-nested-components": "off", // Use with caution
        "react/jsx-no-bind": "off",
        "no-nested-ternary": "off",
        "no-extra-boolean-cast": "off",
        "no-restricted-syntax": [
          "error",
          "ForInStatement",
          "LabeledStatement",
          "WithStatement"
        ], // Overrides Airbnb configuration and enable no-restricted-syntax
        "import/prefer-default-export": "off", // Named export is easier to refactor automatically
        "simple-import-sort/imports": "warn", // Import configuration for `eslint-plugin-simple-import-sort`
        "simple-import-sort/exports": "warn", // Export configuration for `eslint-plugin-simple-import-sort`
        "import/order": "off", // Avoid conflict rule between `eslint-plugin-import` and `eslint-plugin-simple-import-sort`
        "eslint-disable react/jsx-no-useless-fragment": "off", // Avoid conflict rule between `eslint` and `@typescript-eslint`
        "@typescript-eslint/no-unused-expressions": "off", // Avoid conflict rule between `eslint` and `@typescript-eslint`
        "jsx-a11y/control-has-associated-label": "off", // Avoid conflict rule between `eslint` and `@typescript-eslint`
        "@typescript-eslint/no-shadow": "off", // Avoid conflict rule between `eslint` and `@typescript-eslint`
        "jsx-a11y/click-events-have-key-events": "off", // Avoid conflict rule between `eslint` and `@typescript-eslint`,
        "no-void": "off",
        "consistent-return": "off",
        "jsx-a11y/no-static-element-interactions": "off",
        "eslint-disable-next-line no-void": "off",
        "@typescript-eslint/no-unused-vars": "off",
        "unused-imports/no-unused-imports": "error",
        "no-plusplus": "off",
        "no-param-reassign": "off",
        "unused-imports/no-unused-vars": [
          "error",
          { "argsIgnorePattern": "^_" }
        ]
      }
    },
    // Configuration for testing
    {
      "files": ["**/*.test.ts", "**/*.test.tsx"],
      "plugins": ["vitest", "jest-formatting", "testing-library", "jest-dom"],
      "extends": [
        "plugin:vitest/recommended",
        "plugin:jest-formatting/recommended",
        "plugin:testing-library/react",
        "plugin:jest-dom/recommended"
      ]
    },
    // Configuration for e2e testing (Playwright)
    {
      "files": ["**/*.spec.ts"],
      "extends": ["plugin:playwright/recommended"]
    },
    // Configuration for Storybook
    {
      "files": ["*.stories.*"],
      "extends": ["plugin:storybook/recommended"],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true
          }
        ]
      }
    }
  ]
}
